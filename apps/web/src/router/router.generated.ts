/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../routes/__root'
import { Route as LoungeIndexImport } from './../routes/lounge/index'
import { Route as CalendarIndexImport } from './../routes/calendar/index'
import { Route as ArtIndexImport } from './../routes/art/index'
import { Route as AboutIndexImport } from './../routes/about/index'
import { Route as indexIndexImport } from './../routes/(index)/index'
import { Route as legalTermsOfServiceImport } from './../routes/(legal)/terms-of-service'
import { Route as legalPrivacyPolicyImport } from './../routes/(legal)/privacy-policy'
import { Route as legalCookiesImport } from './../routes/(legal)/cookies'
import { Route as CalendarYearIndexImport } from './../routes/calendar/$year.index'
import { Route as CalendarYearMonthImport } from './../routes/calendar/$year.$month'

// Create/Update Routes

const LoungeIndexRoute = LoungeIndexImport.update({
  id: '/lounge/',
  path: '/lounge/',
  getParentRoute: () => rootRoute,
} as any)

const CalendarIndexRoute = CalendarIndexImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRoute,
} as any)

const ArtIndexRoute = ArtIndexImport.update({
  id: '/art/',
  path: '/art/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const indexIndexRoute = indexIndexImport.update({
  id: '/(index)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const legalTermsOfServiceRoute = legalTermsOfServiceImport.update({
  id: '/(legal)/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => rootRoute,
} as any)

const legalPrivacyPolicyRoute = legalPrivacyPolicyImport.update({
  id: '/(legal)/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const legalCookiesRoute = legalCookiesImport.update({
  id: '/(legal)/cookies',
  path: '/cookies',
  getParentRoute: () => rootRoute,
} as any)

const CalendarYearIndexRoute = CalendarYearIndexImport.update({
  id: '/calendar/$year/',
  path: '/calendar/$year/',
  getParentRoute: () => rootRoute,
} as any)

const CalendarYearMonthRoute = CalendarYearMonthImport.update({
  id: '/calendar/$year/$month',
  path: '/calendar/$year/$month',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(legal)/cookies': {
      id: '/(legal)/cookies'
      path: '/cookies'
      fullPath: '/cookies'
      preLoaderRoute: typeof legalCookiesImport
      parentRoute: typeof rootRoute
    }
    '/(legal)/privacy-policy': {
      id: '/(legal)/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof legalPrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/(legal)/terms-of-service': {
      id: '/(legal)/terms-of-service'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof legalTermsOfServiceImport
      parentRoute: typeof rootRoute
    }
    '/(index)/': {
      id: '/(index)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof indexIndexImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/art/': {
      id: '/art/'
      path: '/art'
      fullPath: '/art'
      preLoaderRoute: typeof ArtIndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexImport
      parentRoute: typeof rootRoute
    }
    '/lounge/': {
      id: '/lounge/'
      path: '/lounge'
      fullPath: '/lounge'
      preLoaderRoute: typeof LoungeIndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar/$year/$month': {
      id: '/calendar/$year/$month'
      path: '/calendar/$year/$month'
      fullPath: '/calendar/$year/$month'
      preLoaderRoute: typeof CalendarYearMonthImport
      parentRoute: typeof rootRoute
    }
    '/calendar/$year/': {
      id: '/calendar/$year/'
      path: '/calendar/$year'
      fullPath: '/calendar/$year'
      preLoaderRoute: typeof CalendarYearIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/cookies': typeof legalCookiesRoute
  '/privacy-policy': typeof legalPrivacyPolicyRoute
  '/terms-of-service': typeof legalTermsOfServiceRoute
  '/': typeof indexIndexRoute
  '/about': typeof AboutIndexRoute
  '/art': typeof ArtIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/lounge': typeof LoungeIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/$year': typeof CalendarYearIndexRoute
}

export interface FileRoutesByTo {
  '/cookies': typeof legalCookiesRoute
  '/privacy-policy': typeof legalPrivacyPolicyRoute
  '/terms-of-service': typeof legalTermsOfServiceRoute
  '/': typeof indexIndexRoute
  '/about': typeof AboutIndexRoute
  '/art': typeof ArtIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/lounge': typeof LoungeIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/$year': typeof CalendarYearIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(legal)/cookies': typeof legalCookiesRoute
  '/(legal)/privacy-policy': typeof legalPrivacyPolicyRoute
  '/(legal)/terms-of-service': typeof legalTermsOfServiceRoute
  '/(index)/': typeof indexIndexRoute
  '/about/': typeof AboutIndexRoute
  '/art/': typeof ArtIndexRoute
  '/calendar/': typeof CalendarIndexRoute
  '/lounge/': typeof LoungeIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/$year/': typeof CalendarYearIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/cookies'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/'
    | '/about'
    | '/art'
    | '/calendar'
    | '/lounge'
    | '/calendar/$year/$month'
    | '/calendar/$year'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/cookies'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/'
    | '/about'
    | '/art'
    | '/calendar'
    | '/lounge'
    | '/calendar/$year/$month'
    | '/calendar/$year'
  id:
    | '__root__'
    | '/(legal)/cookies'
    | '/(legal)/privacy-policy'
    | '/(legal)/terms-of-service'
    | '/(index)/'
    | '/about/'
    | '/art/'
    | '/calendar/'
    | '/lounge/'
    | '/calendar/$year/$month'
    | '/calendar/$year/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  legalCookiesRoute: typeof legalCookiesRoute
  legalPrivacyPolicyRoute: typeof legalPrivacyPolicyRoute
  legalTermsOfServiceRoute: typeof legalTermsOfServiceRoute
  indexIndexRoute: typeof indexIndexRoute
  AboutIndexRoute: typeof AboutIndexRoute
  ArtIndexRoute: typeof ArtIndexRoute
  CalendarIndexRoute: typeof CalendarIndexRoute
  LoungeIndexRoute: typeof LoungeIndexRoute
  CalendarYearMonthRoute: typeof CalendarYearMonthRoute
  CalendarYearIndexRoute: typeof CalendarYearIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  legalCookiesRoute: legalCookiesRoute,
  legalPrivacyPolicyRoute: legalPrivacyPolicyRoute,
  legalTermsOfServiceRoute: legalTermsOfServiceRoute,
  indexIndexRoute: indexIndexRoute,
  AboutIndexRoute: AboutIndexRoute,
  ArtIndexRoute: ArtIndexRoute,
  CalendarIndexRoute: CalendarIndexRoute,
  LoungeIndexRoute: LoungeIndexRoute,
  CalendarYearMonthRoute: CalendarYearMonthRoute,
  CalendarYearIndexRoute: CalendarYearIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(legal)/cookies",
        "/(legal)/privacy-policy",
        "/(legal)/terms-of-service",
        "/(index)/",
        "/about/",
        "/art/",
        "/calendar/",
        "/lounge/",
        "/calendar/$year/$month",
        "/calendar/$year/"
      ]
    },
    "/(legal)/cookies": {
      "filePath": "(legal)/cookies.tsx"
    },
    "/(legal)/privacy-policy": {
      "filePath": "(legal)/privacy-policy.tsx"
    },
    "/(legal)/terms-of-service": {
      "filePath": "(legal)/terms-of-service.tsx"
    },
    "/(index)/": {
      "filePath": "(index)/index.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/art/": {
      "filePath": "art/index.tsx"
    },
    "/calendar/": {
      "filePath": "calendar/index.tsx"
    },
    "/lounge/": {
      "filePath": "lounge/index.tsx"
    },
    "/calendar/$year/$month": {
      "filePath": "calendar/$year.$month.tsx"
    },
    "/calendar/$year/": {
      "filePath": "calendar/$year.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
