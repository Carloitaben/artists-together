/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../routes/__root'
import { Route as LoungeImport } from './../routes/lounge'
import { Route as ArtImport } from './../routes/art'
import { Route as IndexImport } from './../routes/index'
import { Route as CalendarIndexImport } from './../routes/calendar/index'
import { Route as AboutIndexImport } from './../routes/about/index'
import { Route as LegalTermsOfServiceImport } from './../routes/_legal/terms-of-service'
import { Route as LegalPrivacyPolicyImport } from './../routes/_legal/privacy-policy'
import { Route as LegalCookiesImport } from './../routes/_legal/cookies'
import { Route as CalendarYearIndexImport } from './../routes/calendar/$year.index'
import { Route as CalendarYearMonthImport } from './../routes/calendar/$year.$month'

// Create/Update Routes

const LoungeRoute = LoungeImport.update({
  id: '/lounge',
  path: '/lounge',
  getParentRoute: () => rootRoute,
} as any)

const ArtRoute = ArtImport.update({
  id: '/art',
  path: '/art',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CalendarIndexRoute = CalendarIndexImport.update({
  id: '/calendar/',
  path: '/calendar/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const LegalTermsOfServiceRoute = LegalTermsOfServiceImport.update({
  id: '/_legal/terms-of-service',
  path: '/terms-of-service',
  getParentRoute: () => rootRoute,
} as any)

const LegalPrivacyPolicyRoute = LegalPrivacyPolicyImport.update({
  id: '/_legal/privacy-policy',
  path: '/privacy-policy',
  getParentRoute: () => rootRoute,
} as any)

const LegalCookiesRoute = LegalCookiesImport.update({
  id: '/_legal/cookies',
  path: '/cookies',
  getParentRoute: () => rootRoute,
} as any)

const CalendarYearIndexRoute = CalendarYearIndexImport.update({
  id: '/calendar/$year/',
  path: '/calendar/$year/',
  getParentRoute: () => rootRoute,
} as any)

const CalendarYearMonthRoute = CalendarYearMonthImport.update({
  id: '/calendar/$year/$month',
  path: '/calendar/$year/$month',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/art': {
      id: '/art'
      path: '/art'
      fullPath: '/art'
      preLoaderRoute: typeof ArtImport
      parentRoute: typeof rootRoute
    }
    '/lounge': {
      id: '/lounge'
      path: '/lounge'
      fullPath: '/lounge'
      preLoaderRoute: typeof LoungeImport
      parentRoute: typeof rootRoute
    }
    '/_legal/cookies': {
      id: '/_legal/cookies'
      path: '/cookies'
      fullPath: '/cookies'
      preLoaderRoute: typeof LegalCookiesImport
      parentRoute: typeof rootRoute
    }
    '/_legal/privacy-policy': {
      id: '/_legal/privacy-policy'
      path: '/privacy-policy'
      fullPath: '/privacy-policy'
      preLoaderRoute: typeof LegalPrivacyPolicyImport
      parentRoute: typeof rootRoute
    }
    '/_legal/terms-of-service': {
      id: '/_legal/terms-of-service'
      path: '/terms-of-service'
      fullPath: '/terms-of-service'
      preLoaderRoute: typeof LegalTermsOfServiceImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar/': {
      id: '/calendar/'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarIndexImport
      parentRoute: typeof rootRoute
    }
    '/calendar/$year/$month': {
      id: '/calendar/$year/$month'
      path: '/calendar/$year/$month'
      fullPath: '/calendar/$year/$month'
      preLoaderRoute: typeof CalendarYearMonthImport
      parentRoute: typeof rootRoute
    }
    '/calendar/$year/': {
      id: '/calendar/$year/'
      path: '/calendar/$year'
      fullPath: '/calendar/$year'
      preLoaderRoute: typeof CalendarYearIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/art': typeof ArtRoute
  '/lounge': typeof LoungeRoute
  '/cookies': typeof LegalCookiesRoute
  '/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/terms-of-service': typeof LegalTermsOfServiceRoute
  '/about': typeof AboutIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/$year': typeof CalendarYearIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/art': typeof ArtRoute
  '/lounge': typeof LoungeRoute
  '/cookies': typeof LegalCookiesRoute
  '/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/terms-of-service': typeof LegalTermsOfServiceRoute
  '/about': typeof AboutIndexRoute
  '/calendar': typeof CalendarIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/$year': typeof CalendarYearIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/art': typeof ArtRoute
  '/lounge': typeof LoungeRoute
  '/_legal/cookies': typeof LegalCookiesRoute
  '/_legal/privacy-policy': typeof LegalPrivacyPolicyRoute
  '/_legal/terms-of-service': typeof LegalTermsOfServiceRoute
  '/about/': typeof AboutIndexRoute
  '/calendar/': typeof CalendarIndexRoute
  '/calendar/$year/$month': typeof CalendarYearMonthRoute
  '/calendar/$year/': typeof CalendarYearIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/art'
    | '/lounge'
    | '/cookies'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/about'
    | '/calendar'
    | '/calendar/$year/$month'
    | '/calendar/$year'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/art'
    | '/lounge'
    | '/cookies'
    | '/privacy-policy'
    | '/terms-of-service'
    | '/about'
    | '/calendar'
    | '/calendar/$year/$month'
    | '/calendar/$year'
  id:
    | '__root__'
    | '/'
    | '/art'
    | '/lounge'
    | '/_legal/cookies'
    | '/_legal/privacy-policy'
    | '/_legal/terms-of-service'
    | '/about/'
    | '/calendar/'
    | '/calendar/$year/$month'
    | '/calendar/$year/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArtRoute: typeof ArtRoute
  LoungeRoute: typeof LoungeRoute
  LegalCookiesRoute: typeof LegalCookiesRoute
  LegalPrivacyPolicyRoute: typeof LegalPrivacyPolicyRoute
  LegalTermsOfServiceRoute: typeof LegalTermsOfServiceRoute
  AboutIndexRoute: typeof AboutIndexRoute
  CalendarIndexRoute: typeof CalendarIndexRoute
  CalendarYearMonthRoute: typeof CalendarYearMonthRoute
  CalendarYearIndexRoute: typeof CalendarYearIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArtRoute: ArtRoute,
  LoungeRoute: LoungeRoute,
  LegalCookiesRoute: LegalCookiesRoute,
  LegalPrivacyPolicyRoute: LegalPrivacyPolicyRoute,
  LegalTermsOfServiceRoute: LegalTermsOfServiceRoute,
  AboutIndexRoute: AboutIndexRoute,
  CalendarIndexRoute: CalendarIndexRoute,
  CalendarYearMonthRoute: CalendarYearMonthRoute,
  CalendarYearIndexRoute: CalendarYearIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/art",
        "/lounge",
        "/_legal/cookies",
        "/_legal/privacy-policy",
        "/_legal/terms-of-service",
        "/about/",
        "/calendar/",
        "/calendar/$year/$month",
        "/calendar/$year/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/art": {
      "filePath": "art.tsx"
    },
    "/lounge": {
      "filePath": "lounge.tsx"
    },
    "/_legal/cookies": {
      "filePath": "_legal/cookies.tsx"
    },
    "/_legal/privacy-policy": {
      "filePath": "_legal/privacy-policy.tsx"
    },
    "/_legal/terms-of-service": {
      "filePath": "_legal/terms-of-service.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/calendar/": {
      "filePath": "calendar/index.tsx"
    },
    "/calendar/$year/$month": {
      "filePath": "calendar/$year.$month.tsx"
    },
    "/calendar/$year/": {
      "filePath": "calendar/$year.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
